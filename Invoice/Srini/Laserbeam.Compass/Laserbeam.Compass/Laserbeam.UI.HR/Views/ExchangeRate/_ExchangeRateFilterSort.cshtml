@model List<SelectListItem>
<style type="text/css">
    #lstFilters, #lstSorts {
        width: 100%;
        height: 100px;
        margin-left: 10px;
    }

    #ddlExchangeRateColumns {
        width: 80% !important;
    }
</style>
<script type="text/javascript">
    var ddlChanged = false;
    function addFilterSort() {
        var option = document.createElement("option");
        var column = $("#ddlExchangeRateColumns").val();
        var columnText = $("#ddlExchangeRateColumns").data("kendoDropDownList").text();
        var operation = $("#ddlExchangeRateOperations").val();
        var operationText = $("#ddlExchangeRateOperations").data("kendoDropDownList").text();
        var value = $("#txtSearch").val();
        if (operation == "asc" || operation == "desc") {
            option.text = columnText + " -> " + operation;
            option.value = column + "|" + operation;
            $("#lstSorts").append(option);
        } else {
            option.text = columnText + " -> " + operationText + " -> " + value;
            option.value = column + "|" + operation + "|" + value;
            $("#lstFilters").append(option);
        }
    }

    function clearFilterSort() {
        var wndFilterSort = $("#divExchnageRateFilterSort").closest(".k-window-content").data("kendoWindow");
        var gridName = wndFilterSort.options.gridName;
        var grid = $("#" + gridName).data("kendoGrid");
        $("#lstSorts").empty();
        $("#lstFilters").empty();
        $("#ddlExchangeRateColumns").data("kendoDropDownList").value(null);
        $("#ddlExchangeRateOperations").data("kendoDropDownList").value(null);
        $("#txtSearch").val('');

        $("#btnAddFilter").prop("disabled", !($("#lstFilters option").length > 0 || $("#lstSorts option").length > 0));
        var gridPage = 0;
        var gridgroup = 0;
        if (grid.pager != undefined) {
            gridPage = grid.pager.dataSource._pageSize;
            gridGroup = grid.pager.dataSource._group;
        }
        grid.dataSource.query({ pageSize: gridPage, filter: [], sort: [], group: gridgroup });
    }

    function showOrHideOperations(dataType) {
        var items = $("[id='ddlExchangeRateOperations_listbox']").last().find(".k-item");
        if (dataType == "string") {
            items[3].style.display = "block";
            items[4].style.display = "block";
            items[5].style.display = "block";
            items[6].style.display = "none";
            items[7].style.display = "none";
            items[8].style.display = "none";
            items[9].style.display = "none";
            items[10].style.display = "none";
            items[11].style.display = "none";
        }
        else {
            items[3].style.display = "none";
            items[4].style.display = "none";
            items[5].style.display = "none";
            items[6].style.display = "block";
            items[7].style.display = "block";
            items[8].style.display = "block";
            items[9].style.display = "block";
            items[10].style.display = "block";
            items[11].style.display = "block";
        }
    }

    $(document).ready(function () {
        $("#btnApplyFilter").attr("disabled", true);
        $("#ddlExchangeRateColumns").change(function () {
            var ddlColumns = $("#ddlExchangeRateColumns").data("kendoDropDownList");
            if (ddlColumns.select() > 0) {
                var wndFilterSort = $(this).closest(".k-window-content").data("kendoWindow");
                var gridName = wndFilterSort.options.gridName;
                var grid = $("#" + gridName).data("kendoGrid");
                var gridColumns = grid.options.dataSource.schema.model.fields;
                var dataType = gridColumns[ddlColumns.dataItem(ddlColumns.select()).Value].type;
                showOrHideOperations(dataType);
            }
            $("#ddlExchangeRateOperations").data("kendoDropDownList").select(0);
            $("#ddlExchangeRateOperations").data("kendoDropDownList").enable(ddlColumns.select() > 0);
        });

        $("#ddlExchangeRateOperations").change(function () {
            var ddlOperations = $("#ddlExchangeRateOperations").data("kendoDropDownList");
            var index = ddlOperations.select();
            var value = $("#ddlExchangeRateOperations").val();
            $("#btnAddFilter").prop("disabled", !(value == "asc" || value == "desc"));
            $("#txtSearch").prop("disabled", (index > 0 && (value == "asc" || value == "desc")));
        });

        $("#txtSearch").keyup(function () {
            $("#btnAddFilter").prop("disabled", !(this.value.length > 0));

        });

        $("#btnAddFilter").click(function () {
            addFilterSort();
            var ddlOperations = $("#ddlExchangeRateOperations").data("kendoDropDownList");
            var ddlColumns = $("#ddlExchangeRateColumns").data("kendoDropDownList");
            $("#btnFilterPopupClose").prop("disabled", !($("#lstFilters option").length > 0 || $("#lstSorts option").length > 0));
            $("#ddlExchangeRateColumns").data("kendoDropDownList").select(0);
            $("#ddlExchangeRateOperations").data("kendoDropDownList").select(0);
            $("#txtSearch").val("");
            $("#ddlExchangeRateOperations").data("kendoDropDownList").enable(ddlColumns.select() > 0);
            $("#txtSearch").prop("disabled", !(ddlOperations.select() > 0) || !(ddlColumns.select() > 0));
            $("#btnAddFilter").prop("disabled", !((ddlOperations.select() > 0) || (ddlColumns.select() > 0)));
            $("#btnApplyFilter").attr("disabled", false);
        });

        $("select").dblclick(function () {
            $("select option:selected").each(function () {
                $(this).remove();
            });
            $("#btnFilterPopupClose").prop("disabled", !($("#lstFilters option").length > 0 || $("#lstSorts option").length > 0));
        });

        $("#btnApplyFilter").click(function () {
            var wndFilterSort = $(this).closest(".k-window-content").data("kendoWindow");
            var gridName = wndFilterSort.options.gridName;
            var grid = $("#" + gridName).data("kendoGrid");
            var gridFields = grid.options.dataSource.schema.model.fields;
            var filter = { logic: "and", filters: [] };
            var sort = [];
            var filterConditions = [];
            $("#lstFilters option").each(function () { filterConditions.push(this.value); });
            filterConditions.sort();
            var filterIndex = 0;
            $.each(filterConditions, function (itemIndex) {
                var filterLogic = { logic: "or", filters: [] };
                var previsorValue = (itemIndex > 0) ? filterConditions[itemIndex - 1].split("|") : null;
                var filterValue = this.split("|");
                var valueObject = (gridFields[filterValue[0]].type == "number") ? Number(filterValue[2]) : filterValue[2];
                if (previsorValue != null && filterValue[0] == previsorValue[0]) {
                    filter.filters[filterIndex].filters.push({ field: filterValue[0], type: gridFields[filterValue[0]].type, operator: filterValue[1], value: valueObject });
                }
                else {
                    filterLogic.filters.push({ field: filterValue[0], type: gridFields[filterValue[0]].type, operator: filterValue[1], value: valueObject });
                    filter.filters.push(filterLogic);
                    if (previsorValue != null && filterValue[0] != previsorValue[0]) {
                        filterIndex++;
                    }
                }
            });


            $.each($("#lstSorts option"), function () {
                var sortValue = this.value.split("|");
                sort.push({ field: sortValue[0], type: gridFields[sortValue[0]].type, dir: sortValue[1] })
            });
            wndFilterSort.close();
            var gridPage = 0;
            var gridGroup = 0;
            if (grid.pager != undefined) {
                gridPage = grid.pager.dataSource._pageSize;
                gridGroup = grid.pager.dataSource._group;
            }


            grid.dataSource.query({ pageSize: gridPage, filter: filter, sort: sort, group: gridGroup });
            $("body").css("overflow", "auto");
            $("#clearfilter").css("display", "inline");
            $("#filter").css("display", "none");
        });

        $("#btnFilterPopupClose").click(function (e) {
            if (!showSaveWarning(e, "ddlChanged")) return false;
            $(this).closest(".k-window-content").data("kendoWindow").close();
            $("body").css("overflow", "auto");
            $("#exchangeRateClearFilter").hide();
            $("#exchangeRateFilter").show();
        });

    });
    function UserManagementClosePopup(e) {
        var $filterListBox = $("#lstFilters").text();
        var $sortListBox = $("#lstSorts").text();
        var ddlSelectedCol = $("#ddlExchangeRateColumns").data("kendoDropDownList").value();
        if (ddlSelectedCol != '' || $filterListBox != '' || $sortListBox != '')
            ddlChanged = true;
        else
            ddlChanged = false;
    }
</script>


<div id="divExchnageRateFilterSort" style="overflow:hidden;">
    <div class="row top-bottom-space">
        <div class="col-xs-4 nopadding text-center">
            @(Html.Kendo().DropDownList().Name("ddlExchangeRateColumns").BindTo(Model).DataTextField("Text").DataValueField("Value").HtmlAttributes(new { style = "width:90%!important;margin-left:10%" }).OptionLabel("--Select Filter/Sort By--").Events(x => x.Change("UserManagementClosePopup")))
        </div>
        <div class="col-xs-3 nopadding text-center">
            @(Html.Kendo().DropDownList().Name("ddlExchangeRateOperations").OptionLabel("--Select Operation--").BindTo(new List<SelectListItem>()
                        {
                            new SelectListItem(){Text = "Sort Ascending",Value = "asc"},
                            new SelectListItem(){Text = "Sort Descending",Value = "desc"},
                            new SelectListItem(){Text = "Contains",Value = "contains"},
                            new SelectListItem(){Text = "Starts With",Value = "startswith"},
                            new SelectListItem(){Text = "Ends With",Value = "endswith"},
                            new SelectListItem(){Text = "Equals",Value = "eq"},
                            new SelectListItem(){Text = "Not Equals",Value = "neq"}
                            ,new SelectListItem(){Text = "Greater Than",Value = "gt"},
                            new SelectListItem(){Text = "Greater Than or Equals",Value = "gte"},
                            new SelectListItem(){Text = "Less Than",Value = "lt"},
                            new SelectListItem(){Text = "Less Than or Equals",Value = "lte"}
                        }).DataTextField("Text").DataValueField("Value").HtmlAttributes(new { disabled = "disabled" }))
        </div>
        <div class="col-xs-2 nopadding text-center">
            @Html.TextBox("txtSearch", "", new { style = "width:85% !important;text-align:left;height:20px;", disabled = "disabled" })
        </div>
        <div class="col-xs-2 nopadding text-center">
            <button id="btnAddFilter" type="button" class="btn btn-xs glyphiconbutton defaultbtncss" style="background-color:rgb(217, 229, 254);" disabled="disabled">
                <span class="glyphicon glyphicon-plus"></span> Click to Add
            </button>

        </div>
    </div>


    <div class="row">
        <div class="col-xs-5" style="margin-left:10px">
            @Html.Label("Filter Condition")
        </div>
        <div class="col-xs-5 ">
            @Html.Label("Sort Condition")
        </div>
    </div>
    <div class="row">
        <div class="col-xs-5">
            @Html.ListBox("lstFilters", new List<SelectListItem>())
        </div>
        <div class="col-xs-5">
            @Html.ListBox("lstSorts", new List<SelectListItem>())
        </div>


    </div>
    <div class="text-center bottom-space" style="color:blue;">
        Double click to remove item from the list
    </div>
    <div class="row text-center top-space">
        <button id="btnApplyFilter" type="button" class="btn btn-xs glyphiconbutton primarybtncss" style="background-color:rgb(217, 229, 254);">
            <span class="glyphicon glyphicon-ok "></span> Apply
        </button>
        <button id="btnFilterPopupClose" type="button" class="btn btn-xs glyphiconbutton defaultbtncss" style="background-color:rgb(217, 229, 254);">
            <span class="glyphicon glyphicon-remove "></span> Close
        </button>

    </div>
</div>