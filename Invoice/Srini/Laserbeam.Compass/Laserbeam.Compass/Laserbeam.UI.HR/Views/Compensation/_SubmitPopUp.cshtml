@using Laserbeam.BusinessObject.Common.MeritBusinussObjects;
<style type="text/css">
    #grdSubmitReportees .selected {
        background-color: #FFEFBC !important;
        color: black !important;
    }

    #grdSubmitReportees .k-grid .k-header {
        display: none;
    }
.closeiconsection{
float: right;
right: 54px;
position: relative;
z-index: 9999;
top: 5px;
cursor:pointer;
}
</style>
@Html.AntiForgeryToken()
<div class="modal-dialog width-seventy" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title" id="myModalLabel"><i class="fa fa-paper-plane-o"></i> Submit your team for approval</h4>
        </div>
        <div class="modal-body">

            <div class="row">
                <div class="col-md-12">
                    <div class="quotetxt">
                        <span class="splquote"><span id="recordCount"></span></span> employees review need to be submitted for approval.
                                          </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="closeiconsection" id="submitClear"><span><i class="fa fa-close"></i></span></div>
                    <div class="form-group">
                        <div class="input-group">
                            @(Html.Kendo().AutoComplete().Name("submitEmployeedetails")
                    .DataTextField("EmployeeID").Placeholder("Search by Employee Name or Employee ID")
            .Filter(FilterType.Contains)
                    .DataSource(datasource =>
                    {
                        datasource.Read(read =>
                        {
                            read.Action("GetSubmitEmployeeSearchData", "Compensation").Data("GetSubmitReporteesParam").Type(HttpVerbs.Post);
                        }).ServerFiltering(false);
                    }).HtmlAttributes(new { @class = "form-control", id = "submitEmployeedetails" })
                .Events(events => events.Select("onSelect_submitEmployeeSearch"))
                            )

                            <div class="input-group-addon"><i class="fa fa-search"></i></div>
                        </div>
                    </div>
                </div>
            </div>

            @(Html.Kendo().Grid<SubmitReporteesModel>().Name("grdSubmitReportees")
                        .Columns(columns =>
                        {
                        columns.Bound(m => m.EmpJobNum).Hidden();
                        columns.Template(@<text></text>)
                                .ClientTemplate("<span><input title='Submit' type='checkbox' id='indSubmitChkbox'></input></span>")
                                .HtmlAttributes(new { style = "text-align:left !important;" }).HeaderTemplate("<label style='width:19px !important'><input type='checkbox' title='Check All' id='submitChkAll'></input></label>");
            columns.Bound(m => m.EmployeeName).Title("Employee Name").HtmlAttributes(new { @class = "orangetxt" });
            columns.Template(@<text></text>).ClientTemplate("<label class='leftcommenttext'>Send to </label> <img src='../../images/paperplane.png' alt='' /> <br/>");
                            columns.Bound(m => m.NextLevelManagerName).Title("Next Level Manager Name");


                        })
                                                        .DataSource(datasource => datasource.Ajax().ServerOperation(true)
                                                        .Model(model => model.Id(p => p.EmpJobNum))
                                                        .Read(read => read.Action("_GetSubmitReportees", "Compensation").Data("GetSubmitReporteesParam"))//.PageSize(10)
                                                                .Model(model => { model.Id(id => id.EmpJobNum); }))//.Pageable(x => x.PageSizes(false))
                                                                        .Sortable().Resizable(resize => resize.Columns(true))
                                                                                           .Scrollable(scrollable => scrollable.Height(165)).Events(x => x.DataBound("submitGridDataBound"))
            )


            <div class="row top-pad">
                <div class="col-md-12 overallcomment">
                    <textarea id="submissionComment" class="form-control" placeholder="This is an overall comment. Comments entered here will be send to the next level manager through email" rows="3" cols="5"></textarea>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <div class="row nomargin">
                <div class="col-md-12">
                    <button type="button" class="btn btn-cancel" data-dismiss="modal" id="btnCancelSubmit"><i class="fa fa-ban"></i> Cancel</button>
                    <button type="button" id="btnSubmitSelectedEmployees" class="btn btn-info prim-btn btn-submit"><i class="fa fa-paper-plane-o"></i> Submit Reviews</button>
                </div>
            </div>

        </div>
    </div>
</div>
